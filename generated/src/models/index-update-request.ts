/* tslint:disable */
/* eslint-disable */
/**
 * Aspect Media Engine API
 * A FastAPI application for AI media engine functionality
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreFeatureType } from './core-feature-type';
import {
    CoreFeatureTypeFromJSON,
    CoreFeatureTypeFromJSONTyped,
    CoreFeatureTypeToJSON,
    CoreFeatureTypeToJSONTyped,
} from './core-feature-type';

/**
 * API request schema for updating an index
 * @export
 * @interface IndexUpdateRequest
 */
export interface IndexUpdateRequest {
    /**
     * 
     * @type {string}
     * @memberof IndexUpdateRequest
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IndexUpdateRequest
     */
    description?: string | null;
    /**
     * 
     * @type {Array<CoreFeatureType>}
     * @memberof IndexUpdateRequest
     */
    defaultFeatures?: Array<CoreFeatureType> | null;
    /**
     * 
     * @type {number}
     * @memberof IndexUpdateRequest
     */
    numAssets?: number | null;
    /**
     * 
     * @type {number}
     * @memberof IndexUpdateRequest
     */
    sizeBytes?: number | null;
    /**
     * 
     * @type {number}
     * @memberof IndexUpdateRequest
     */
    totalTokensUsed?: number | null;
    /**
     * 
     * @type {number}
     * @memberof IndexUpdateRequest
     */
    duration?: number | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof IndexUpdateRequest
     */
    samplePrompts?: Array<string> | null;
}

/**
 * Check if a given object implements the IndexUpdateRequest interface.
 */
export function instanceOfIndexUpdateRequest(value: object): value is IndexUpdateRequest {
    return true;
}

export function IndexUpdateRequestFromJSON(json: any): IndexUpdateRequest {
    return IndexUpdateRequestFromJSONTyped(json, false);
}

export function IndexUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndexUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'defaultFeatures': json['default_features'] == null ? undefined : ((json['default_features'] as Array<any>).map(CoreFeatureTypeFromJSON)),
        'numAssets': json['num_assets'] == null ? undefined : json['num_assets'],
        'sizeBytes': json['size_bytes'] == null ? undefined : json['size_bytes'],
        'totalTokensUsed': json['total_tokens_used'] == null ? undefined : json['total_tokens_used'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'samplePrompts': json['sample_prompts'] == null ? undefined : json['sample_prompts'],
    };
}

export function IndexUpdateRequestToJSON(json: any): IndexUpdateRequest {
    return IndexUpdateRequestToJSONTyped(json, false);
}

export function IndexUpdateRequestToJSONTyped(value?: IndexUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'default_features': value['defaultFeatures'] == null ? undefined : ((value['defaultFeatures'] as Array<any>).map(CoreFeatureTypeToJSON)),
        'num_assets': value['numAssets'],
        'size_bytes': value['sizeBytes'],
        'total_tokens_used': value['totalTokensUsed'],
        'duration': value['duration'],
        'sample_prompts': value['samplePrompts'],
    };
}

