/* tslint:disable */
/* eslint-disable */
/**
 * Aspect Media Engine API
 * A FastAPI application for AI media engine functionality
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeatureInfo } from './feature-info';
import {
    FeatureInfoFromJSON,
    FeatureInfoFromJSONTyped,
    FeatureInfoToJSON,
    FeatureInfoToJSONTyped,
} from './feature-info';

/**
 * API response schema when returning task info
 * @export
 * @interface TaskGetResponse
 */
export interface TaskGetResponse {
    /**
     * Task ID
     * @type {string}
     * @memberof TaskGetResponse
     */
    id: string;
    /**
     * Asset this task is associated with
     * @type {string}
     * @memberof TaskGetResponse
     */
    assetId: string;
    /**
     * Core feature states for an asset - maps core feature types to their current states
     * @type {{ [key: string]: FeatureInfo; }}
     * @memberof TaskGetResponse
     */
    features: { [key: string]: FeatureInfo; };
    /**
     * User who requested this task
     * @type {string}
     * @memberof TaskGetResponse
     */
    userId: string;
    /**
     * Task creation timestamp
     * @type {Date}
     * @memberof TaskGetResponse
     */
    created: Date;
    /**
     * Task last updated timestamp
     * @type {Date}
     * @memberof TaskGetResponse
     */
    updated: Date;
}

/**
 * Check if a given object implements the TaskGetResponse interface.
 */
export function instanceOfTaskGetResponse(value: object): value is TaskGetResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('assetId' in value) || value['assetId'] === undefined) return false;
    if (!('features' in value) || value['features'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    return true;
}

export function TaskGetResponseFromJSON(json: any): TaskGetResponse {
    return TaskGetResponseFromJSONTyped(json, false);
}

export function TaskGetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskGetResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'assetId': json['asset_id'],
        'features': (mapValues(json['features'], FeatureInfoFromJSON)),
        'userId': json['user_id'],
        'created': (new Date(json['created'])),
        'updated': (new Date(json['updated'])),
    };
}

export function TaskGetResponseToJSON(json: any): TaskGetResponse {
    return TaskGetResponseToJSONTyped(json, false);
}

export function TaskGetResponseToJSONTyped(value?: TaskGetResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'asset_id': value['assetId'],
        'features': (mapValues(value['features'], FeatureInfoToJSON)),
        'user_id': value['userId'],
        'created': ((value['created']).toISOString()),
        'updated': ((value['updated']).toISOString()),
    };
}

