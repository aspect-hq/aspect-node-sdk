/* tslint:disable */
/* eslint-disable */
/**
 * Aspect Media Engine API
 * A FastAPI application for AI media engine functionality
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AssetType } from './asset-type';
import {
    AssetTypeFromJSON,
    AssetTypeFromJSONTyped,
    AssetTypeToJSON,
    AssetTypeToJSONTyped,
} from './asset-type';
import type { FeatureInfo } from './feature-info';
import {
    FeatureInfoFromJSON,
    FeatureInfoFromJSONTyped,
    FeatureInfoToJSON,
    FeatureInfoToJSONTyped,
} from './feature-info';
import type { ProxyGetResponse } from './proxy-get-response';
import {
    ProxyGetResponseFromJSON,
    ProxyGetResponseFromJSONTyped,
    ProxyGetResponseToJSON,
    ProxyGetResponseToJSONTyped,
} from './proxy-get-response';
import type { PreviewGetResponse } from './preview-get-response';
import {
    PreviewGetResponseFromJSON,
    PreviewGetResponseFromJSONTyped,
    PreviewGetResponseToJSON,
    PreviewGetResponseToJSONTyped,
} from './preview-get-response';

/**
 * API response schema for listing assets
 * @export
 * @interface AssetListResponse
 */
export interface AssetListResponse {
    /**
     * 
     * @type {string}
     * @memberof AssetListResponse
     */
    id: string;
    /**
     * 
     * @type {AssetType}
     * @memberof AssetListResponse
     */
    type: AssetType;
    /**
     * 
     * @type {string}
     * @memberof AssetListResponse
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof AssetListResponse
     */
    sizeBytes: number;
    /**
     * 
     * @type {string}
     * @memberof AssetListResponse
     */
    mimeType: string;
    /**
     * 
     * @type {boolean}
     * @memberof AssetListResponse
     */
    saveOriginal: boolean;
    /**
     * 
     * @type {number}
     * @memberof AssetListResponse
     */
    duration?: number | null;
    /**
     * 
     * @type {string}
     * @memberof AssetListResponse
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof AssetListResponse
     */
    indexId: string;
    /**
     * Core feature states for an asset - maps core feature types to their current states
     * @type {{ [key: string]: FeatureInfo; }}
     * @memberof AssetListResponse
     */
    features: { [key: string]: FeatureInfo; };
    /**
     * 
     * @type {ProxyGetResponse}
     * @memberof AssetListResponse
     */
    proxy?: ProxyGetResponse | null;
    /**
     * 
     * @type {PreviewGetResponse}
     * @memberof AssetListResponse
     */
    preview?: PreviewGetResponse | null;
    /**
     * 
     * @type {Date}
     * @memberof AssetListResponse
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof AssetListResponse
     */
    updated: Date;
}



/**
 * Check if a given object implements the AssetListResponse interface.
 */
export function instanceOfAssetListResponse(value: object): value is AssetListResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('sizeBytes' in value) || value['sizeBytes'] === undefined) return false;
    if (!('mimeType' in value) || value['mimeType'] === undefined) return false;
    if (!('saveOriginal' in value) || value['saveOriginal'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('indexId' in value) || value['indexId'] === undefined) return false;
    if (!('features' in value) || value['features'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    return true;
}

export function AssetListResponseFromJSON(json: any): AssetListResponse {
    return AssetListResponseFromJSONTyped(json, false);
}

export function AssetListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': AssetTypeFromJSON(json['type']),
        'name': json['name'],
        'sizeBytes': json['size_bytes'],
        'mimeType': json['mime_type'],
        'saveOriginal': json['save_original'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'userId': json['user_id'],
        'indexId': json['index_id'],
        'features': (mapValues(json['features'], FeatureInfoFromJSON)),
        'proxy': json['proxy'] == null ? undefined : ProxyGetResponseFromJSON(json['proxy']),
        'preview': json['preview'] == null ? undefined : PreviewGetResponseFromJSON(json['preview']),
        'created': (new Date(json['created'])),
        'updated': (new Date(json['updated'])),
    };
}

export function AssetListResponseToJSON(json: any): AssetListResponse {
    return AssetListResponseToJSONTyped(json, false);
}

export function AssetListResponseToJSONTyped(value?: AssetListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': AssetTypeToJSON(value['type']),
        'name': value['name'],
        'size_bytes': value['sizeBytes'],
        'mime_type': value['mimeType'],
        'save_original': value['saveOriginal'],
        'duration': value['duration'],
        'user_id': value['userId'],
        'index_id': value['indexId'],
        'features': (mapValues(value['features'], FeatureInfoToJSON)),
        'proxy': ProxyGetResponseToJSON(value['proxy']),
        'preview': PreviewGetResponseToJSON(value['preview']),
        'created': ((value['created']).toISOString()),
        'updated': ((value['updated']).toISOString()),
    };
}

