/* tslint:disable */
/* eslint-disable */
/**
 * Aspect Media Engine API
 * A FastAPI application for AI media engine functionality
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoreFeatureType } from './core-feature-type';
import {
    CoreFeatureTypeFromJSON,
    CoreFeatureTypeFromJSONTyped,
    CoreFeatureTypeToJSON,
    CoreFeatureTypeToJSONTyped,
} from './core-feature-type';

/**
 * API response schema for listing indexes
 * @export
 * @interface IndexListResponse
 */
export interface IndexListResponse {
    /**
     * 
     * @type {string}
     * @memberof IndexListResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof IndexListResponse
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof IndexListResponse
     */
    description: string | null;
    /**
     * 
     * @type {number}
     * @memberof IndexListResponse
     */
    numAssets: number;
    /**
     * 
     * @type {number}
     * @memberof IndexListResponse
     */
    sizeBytes: number;
    /**
     * 
     * @type {number}
     * @memberof IndexListResponse
     */
    totalTokensUsed: number;
    /**
     * 
     * @type {number}
     * @memberof IndexListResponse
     */
    duration: number;
    /**
     * 
     * @type {string}
     * @memberof IndexListResponse
     */
    userId: string | null;
    /**
     * 
     * @type {Array<CoreFeatureType>}
     * @memberof IndexListResponse
     */
    defaultFeatures: Array<CoreFeatureType>;
    /**
     * 
     * @type {boolean}
     * @memberof IndexListResponse
     */
    isSample: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IndexListResponse
     */
    isSampleReady: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof IndexListResponse
     */
    samplePrompts: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof IndexListResponse
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof IndexListResponse
     */
    updated: Date;
}

/**
 * Check if a given object implements the IndexListResponse interface.
 */
export function instanceOfIndexListResponse(value: object): value is IndexListResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('numAssets' in value) || value['numAssets'] === undefined) return false;
    if (!('sizeBytes' in value) || value['sizeBytes'] === undefined) return false;
    if (!('totalTokensUsed' in value) || value['totalTokensUsed'] === undefined) return false;
    if (!('duration' in value) || value['duration'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('defaultFeatures' in value) || value['defaultFeatures'] === undefined) return false;
    if (!('isSample' in value) || value['isSample'] === undefined) return false;
    if (!('isSampleReady' in value) || value['isSampleReady'] === undefined) return false;
    if (!('samplePrompts' in value) || value['samplePrompts'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    return true;
}

export function IndexListResponseFromJSON(json: any): IndexListResponse {
    return IndexListResponseFromJSONTyped(json, false);
}

export function IndexListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndexListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'],
        'numAssets': json['num_assets'],
        'sizeBytes': json['size_bytes'],
        'totalTokensUsed': json['total_tokens_used'],
        'duration': json['duration'],
        'userId': json['user_id'],
        'defaultFeatures': ((json['default_features'] as Array<any>).map(CoreFeatureTypeFromJSON)),
        'isSample': json['is_sample'],
        'isSampleReady': json['is_sample_ready'],
        'samplePrompts': json['sample_prompts'],
        'created': (new Date(json['created'])),
        'updated': (new Date(json['updated'])),
    };
}

export function IndexListResponseToJSON(json: any): IndexListResponse {
    return IndexListResponseToJSONTyped(json, false);
}

export function IndexListResponseToJSONTyped(value?: IndexListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'num_assets': value['numAssets'],
        'size_bytes': value['sizeBytes'],
        'total_tokens_used': value['totalTokensUsed'],
        'duration': value['duration'],
        'user_id': value['userId'],
        'default_features': ((value['defaultFeatures'] as Array<any>).map(CoreFeatureTypeToJSON)),
        'is_sample': value['isSample'],
        'is_sample_ready': value['isSampleReady'],
        'sample_prompts': value['samplePrompts'],
        'created': ((value['created']).toISOString()),
        'updated': ((value['updated']).toISOString()),
    };
}

