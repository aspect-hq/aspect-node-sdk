/* tslint:disable */
/* eslint-disable */
/**
 * Aspect Media Engine API
 * A FastAPI application for AI media engine functionality
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AnalyzeAskRequest,
  AnalyzeAskResponse,
  AnalyzeBoxRequest,
  AnalyzeBoxResponse,
  AnalyzePointRequest,
  AnalyzePointResponse,
  HTTPValidationError,
} from '../models/index';
import {
    AnalyzeAskRequestFromJSON,
    AnalyzeAskRequestToJSON,
    AnalyzeAskResponseFromJSON,
    AnalyzeAskResponseToJSON,
    AnalyzeBoxRequestFromJSON,
    AnalyzeBoxRequestToJSON,
    AnalyzeBoxResponseFromJSON,
    AnalyzeBoxResponseToJSON,
    AnalyzePointRequestFromJSON,
    AnalyzePointRequestToJSON,
    AnalyzePointResponseFromJSON,
    AnalyzePointResponseToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
} from '../models/index';

export interface AnalyzeAnalyzeAskRequest {
    analyzeAskRequest: AnalyzeAskRequest;
}

export interface AnalyzeAnalyzeBoxRequest {
    analyzeBoxRequest: AnalyzeBoxRequest;
}

export interface AnalyzeAnalyzePointRequest {
    analyzePointRequest: AnalyzePointRequest;
}

/**
 * AnalyzeApi - interface
 * 
 * @export
 * @interface AnalyzeApiInterface
 */
export interface AnalyzeApiInterface {
    /**
     * Answer natural language questions about an image using Moondream\'s query method.  This endpoint analyzes an image asset and answers questions about its content, objects, scenes, text, and other visual elements.
     * @summary Analyze Ask
     * @param {AnalyzeAskRequest} analyzeAskRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyzeApiInterface
     */
    analyzeAnalyzeAskRaw(requestParameters: AnalyzeAnalyzeAskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AnalyzeAskResponse>>;

    /**
     * Answer natural language questions about an image using Moondream\'s query method.  This endpoint analyzes an image asset and answers questions about its content, objects, scenes, text, and other visual elements.
     * Analyze Ask
     */
    analyzeAnalyzeAsk(requestParameters: AnalyzeAnalyzeAskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AnalyzeAskResponse>;

    /**
     * Detect and locate objects in an image using Moondream\'s box method.  This endpoint identifies objects mentioned in the query and returns their bounding box coordinates in the image.
     * @summary Analyze Box
     * @param {AnalyzeBoxRequest} analyzeBoxRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyzeApiInterface
     */
    analyzeAnalyzeBoxRaw(requestParameters: AnalyzeAnalyzeBoxRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AnalyzeBoxResponse>>;

    /**
     * Detect and locate objects in an image using Moondream\'s box method.  This endpoint identifies objects mentioned in the query and returns their bounding box coordinates in the image.
     * Analyze Box
     */
    analyzeAnalyzeBox(requestParameters: AnalyzeAnalyzeBoxRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AnalyzeBoxResponse>;

    /**
     * Get precise coordinates for objects in an image using Moondream\'s point method.  This endpoint locates specific objects mentioned in the query and returns their pixel coordinates in the image.
     * @summary Analyze Point
     * @param {AnalyzePointRequest} analyzePointRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AnalyzeApiInterface
     */
    analyzeAnalyzePointRaw(requestParameters: AnalyzeAnalyzePointRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AnalyzePointResponse>>;

    /**
     * Get precise coordinates for objects in an image using Moondream\'s point method.  This endpoint locates specific objects mentioned in the query and returns their pixel coordinates in the image.
     * Analyze Point
     */
    analyzeAnalyzePoint(requestParameters: AnalyzeAnalyzePointRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AnalyzePointResponse>;

}

/**
 * 
 */
export class AnalyzeApi extends runtime.BaseAPI implements AnalyzeApiInterface {

    /**
     * Answer natural language questions about an image using Moondream\'s query method.  This endpoint analyzes an image asset and answers questions about its content, objects, scenes, text, and other visual elements.
     * Analyze Ask
     */
    async analyzeAnalyzeAskRaw(requestParameters: AnalyzeAnalyzeAskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AnalyzeAskResponse>> {
        if (requestParameters['analyzeAskRequest'] == null) {
            throw new runtime.RequiredError(
                'analyzeAskRequest',
                'Required parameter "analyzeAskRequest" was null or undefined when calling analyzeAnalyzeAsk().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/analyze/ask`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AnalyzeAskRequestToJSON(requestParameters['analyzeAskRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AnalyzeAskResponseFromJSON(jsonValue));
    }

    /**
     * Answer natural language questions about an image using Moondream\'s query method.  This endpoint analyzes an image asset and answers questions about its content, objects, scenes, text, and other visual elements.
     * Analyze Ask
     */
    async analyzeAnalyzeAsk(requestParameters: AnalyzeAnalyzeAskRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AnalyzeAskResponse> {
        const response = await this.analyzeAnalyzeAskRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Detect and locate objects in an image using Moondream\'s box method.  This endpoint identifies objects mentioned in the query and returns their bounding box coordinates in the image.
     * Analyze Box
     */
    async analyzeAnalyzeBoxRaw(requestParameters: AnalyzeAnalyzeBoxRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AnalyzeBoxResponse>> {
        if (requestParameters['analyzeBoxRequest'] == null) {
            throw new runtime.RequiredError(
                'analyzeBoxRequest',
                'Required parameter "analyzeBoxRequest" was null or undefined when calling analyzeAnalyzeBox().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/analyze/box`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AnalyzeBoxRequestToJSON(requestParameters['analyzeBoxRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AnalyzeBoxResponseFromJSON(jsonValue));
    }

    /**
     * Detect and locate objects in an image using Moondream\'s box method.  This endpoint identifies objects mentioned in the query and returns their bounding box coordinates in the image.
     * Analyze Box
     */
    async analyzeAnalyzeBox(requestParameters: AnalyzeAnalyzeBoxRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AnalyzeBoxResponse> {
        const response = await this.analyzeAnalyzeBoxRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get precise coordinates for objects in an image using Moondream\'s point method.  This endpoint locates specific objects mentioned in the query and returns their pixel coordinates in the image.
     * Analyze Point
     */
    async analyzeAnalyzePointRaw(requestParameters: AnalyzeAnalyzePointRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AnalyzePointResponse>> {
        if (requestParameters['analyzePointRequest'] == null) {
            throw new runtime.RequiredError(
                'analyzePointRequest',
                'Required parameter "analyzePointRequest" was null or undefined when calling analyzeAnalyzePoint().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/analyze/point`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AnalyzePointRequestToJSON(requestParameters['analyzePointRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AnalyzePointResponseFromJSON(jsonValue));
    }

    /**
     * Get precise coordinates for objects in an image using Moondream\'s point method.  This endpoint locates specific objects mentioned in the query and returns their pixel coordinates in the image.
     * Analyze Point
     */
    async analyzeAnalyzePoint(requestParameters: AnalyzeAnalyzePointRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AnalyzePointResponse> {
        const response = await this.analyzeAnalyzePointRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
